{"version":3,"file":"static/js/182.4f1eab21.chunk.js","mappings":"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","sources":["components/CheckOutItem.jsx","pages/CheckOutPage.jsx","redux/cart/cart.action.js"],"sourcesContent":["import React from 'react';\r\n\r\nimport RemoveRoundedIcon from '@mui/icons-material/RemoveRounded';\r\nimport AddRoundedIcon from '@mui/icons-material/AddRounded';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport { TableCell, TableRow } from '@mui/material';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { addItem, deleteItem, completeDeleteItem } from '../redux/cart/cart.action';\r\n\r\n\r\nconst CheckOutItem = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const addItemHandler = item => dispatch(addItem(item));\r\n    const deleteItemHandler = item => dispatch(deleteItem(item));\r\n    const completeDeleteItemHandler = item => dispatch(completeDeleteItem(item));\r\n\r\n    return (\r\n        <TableRow\r\n            hover={true}\r\n            key={props.item.id}\r\n            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n        >\r\n            <TableCell component=\"th\" scope=\"row\">\r\n                <img width={100} height={130} src={props.item.imageUrl} alt={props.item.name}></img>\r\n            </TableCell>\r\n            <TableCell >{props.item.name}</TableCell>\r\n            <TableCell >\r\n                <RemoveRoundedIcon fontSize='small' onClick={() => deleteItemHandler(props.item)} color='secondary' />\r\n                <span style={{ fontSize: 20, margin: 15 }}>{props.item.quantity}</span>\r\n                <AddRoundedIcon fontSize='small' onClick={() => addItemHandler(props.item)} color='secondary' />\r\n            </TableCell>\r\n            <TableCell >$ {props.item.price}</TableCell>\r\n            <TableCell ><ClearIcon onClick={() => completeDeleteItemHandler(props.item)} color='secondary'></ClearIcon></TableCell>\r\n        </TableRow>\r\n    )\r\n}\r\n\r\nexport default React.memo(CheckOutItem);","import * as React from 'react';\r\n\r\nimport CheckOutItem from '../components/CheckOutItem';\r\n\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Container,\r\n    Paper,\r\n    Typography,\r\n    TablePagination\r\n} from '@mui/material';\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectCartItems, selectCartTotal } from '../redux/cart/cart.selector';\r\n\r\nconst CheckOutPage = (props) => {\r\n    const cartItems = useSelector(selectCartItems);\r\n    const total = useSelector(selectCartTotal);\r\n\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    return (\r\n        <Container >\r\n            <Paper sx={{ width: '100%', overflow: 'hidden', mt: 5 }}>\r\n                <TableContainer sx={{ maxHeight: 500 }}>\r\n                    <Table stickyHeader sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Product</TableCell>\r\n                                <TableCell >Description</TableCell>\r\n                                <TableCell >Quantity</TableCell>\r\n                                <TableCell >Price</TableCell>\r\n                                <TableCell >Remove</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {cartItems.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((item) => (\r\n                                <CheckOutItem key={item.id} item={item}></CheckOutItem>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[3, 5, 10]}\r\n                    component=\"div\"\r\n                    count={cartItems.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n            <Typography variant='h6' align='right' margin={3}>Total: ${total}</Typography>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default React.memo(CheckOutPage);","import { CartActionType } from \"./cart.type\";\r\n\r\nexport const addItem = (item) => ({\r\n  type: CartActionType.ADD_ITEM,\r\n  payload: item,\r\n});\r\n\r\nexport const deleteItem = (item) => ({\r\n  type: CartActionType.DELETE_ITEM,\r\n  payload: item,\r\n});\r\n\r\nexport const completeDeleteItem = (item) => ({\r\n  type: CartActionType.COMPLETE_DELETE_ITEM,\r\n  payload: item,\r\n});\r\n"],"names":["CheckOutItem","props","dispatch","useDispatch","TableRow","hover","sx","border","TableCell","component","scope","width","height","src","item","imageUrl","alt","name","RemoveRounded","fontSize","onClick","deleteItem","color","style","margin","quantity","AddRounded","addItem","price","Clear","completeDeleteItem","id","React","CheckOutPage","cartItems","useSelector","selectCartItems","total","selectCartTotal","page","setPage","rowsPerPage","setRowsPerPage","Container","Paper","overflow","mt","TableContainer","maxHeight","Table","stickyHeader","minWidth","TableHead","TableBody","slice","map","TablePagination","rowsPerPageOptions","count","length","onPageChange","event","newPage","onRowsPerPageChange","target","value","Typography","variant","align","type","CartActionType","payload"],"sourceRoot":""}