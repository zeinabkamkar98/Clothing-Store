{"version":3,"file":"static/js/956.1e9422e2.chunk.js","mappings":"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","sources":["components/SignUp.jsx","components/SignIn.jsx","pages/SignInPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport {\r\n    Typography,\r\n    Button,\r\n    Stack,\r\n    TextField,\r\n    FormControl\r\n} from '@mui/material';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCurrentUser } from '../redux/user/user.action';\r\n\r\nconst SignUp = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const setCurrentUserHandler = user => dispatch(setCurrentUser(user));\r\n\r\n    const [userData, setUserData] = useState(\r\n        {\r\n            email: {\r\n                value: '',\r\n                error: false,\r\n                errorText: \"\"\r\n            },\r\n            name: {\r\n                value: '',\r\n                error: false,\r\n                errorText: \"\"\r\n            },\r\n            repeatePassword: {\r\n                value: '',\r\n                error: false,\r\n                errorText: \"\"\r\n            },\r\n            password: {\r\n                value: '',\r\n                error: false,\r\n                errorText: \"\"\r\n            }\r\n\r\n        }\r\n    )\r\n\r\n    useEffect(() => {\r\n        if (userData.email.value.length === 0) {\r\n            userData.email.error = true;\r\n            userData.email.errorText = \"required\";\r\n        }\r\n        else {\r\n            userData.email.error = false;\r\n            userData.email.errorText = \"\";\r\n        }\r\n    }, [userData.email]);\r\n\r\n    useEffect(() => {\r\n        if (userData.password.value.length === 0) {\r\n            userData.password.error = true;\r\n            userData.password.errorText = \"required\"\r\n        }\r\n        else {\r\n            userData.password.error = false;\r\n            userData.password.errorText = \"\";\r\n        }\r\n    }, [userData.password]);\r\n    useEffect(() => {\r\n        if (userData.name.value.length === 0) {\r\n            userData.name.error = true;\r\n            userData.name.errorText = \"required\"\r\n        }\r\n        else {\r\n            userData.name.error = false;\r\n            userData.name.errorText = \"\";\r\n        }\r\n    }, [userData.name]);\r\n    useEffect(() => {\r\n        if (userData.repeatePassword.value !== userData.password.value) {\r\n            userData.repeatePassword.error = true;\r\n            userData.repeatePassword.errorText = \"repeate password does not match\"\r\n        }\r\n        else {\r\n            userData.repeatePassword.error = false;\r\n            userData.repeatePassword.errorText = \"\";\r\n        }\r\n    }, [userData.repeatePassword]);\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        if (!userData.email.error && !userData.password.error && !userData.name.error && !userData.repeatePassword.error) {\r\n            setCurrentUserHandler(userData);\r\n        }\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { value, name } = event.target;\r\n        setUserData({ ...userData, [name]: { ...userData[name], value } });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h5\" component=\"div\">\r\n                I already have an account\r\n            </Typography>\r\n            <Typography variant=\"body2\" display=\"block\" >\r\n                Sign in with your email and password.\r\n            </Typography>\r\n            <FormControl fullWidth sx={{ mt: 1 }} variant=\"standard\">\r\n                <FormControl fullWidth sx={{ mt: 1 }} variant=\"standard\">\r\n                    <TextField\r\n                        name='name'\r\n                        type='text'\r\n                        value={userData.name.value}\r\n                        error={userData.name.error}\r\n                        helperText={userData.name.errorText}\r\n                        onChange={handleChange}\r\n                        label='name'\r\n                        required\r\n                        variant=\"standard\"\r\n                    />\r\n                </FormControl>\r\n                <TextField\r\n                    name='email'\r\n                    type='email'\r\n                    onChange={handleChange}\r\n                    value={userData.email.value}\r\n                    label='email'\r\n                    error={userData.email.error}\r\n                    helperText={userData.email.errorText}\r\n                    required\r\n                    variant=\"standard\"\r\n                />\r\n            </FormControl>\r\n            <FormControl fullWidth sx={{ mt: 1 }} variant=\"standard\">\r\n                <TextField\r\n                    name='password'\r\n                    type='password'\r\n                    value={userData.password.value}\r\n                    error={userData.password.error}\r\n                    helperText={userData.password.errorText}\r\n                    onChange={handleChange}\r\n                    label='password'\r\n                    required\r\n                    variant=\"standard\"\r\n                />\r\n            </FormControl>\r\n            <FormControl fullWidth sx={{ mt: 1 }} variant=\"standard\">\r\n                <TextField\r\n                    name='repeatePassword'\r\n                    type='password'\r\n                    value={userData.repeatePassword.value}\r\n                    error={userData.repeatePassword.error}\r\n                    helperText={userData.repeatePassword.errorText}\r\n                    onChange={handleChange}\r\n                    label='repeat password'\r\n                    required\r\n                    variant=\"standard\"\r\n                />\r\n            </FormControl>\r\n\r\n            <Stack spacing={2} direction=\"row\" sx={{ pt: 5 }}>\r\n                <Button variant=\"contained\" onClick={handleSubmit}>SING IN</Button>\r\n            </Stack>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default React.memo(SignUp);","import React, { useState, useEffect } from 'react';\r\n\r\nimport {\r\n    Typography,\r\n    Button,\r\n    Stack,\r\n    TextField,\r\n    FormControl\r\n} from '@mui/material';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { setCurrentUser } from '../redux/user/user.action';\r\n\r\nconst SignIn = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const setCurrentUserHandler = user => dispatch(setCurrentUser(user));\r\n\r\n    const [userData, setUserData] = useState(\r\n        {\r\n            email: {\r\n                value: '',\r\n                error: false,\r\n                errorText: \"\"\r\n            },\r\n            password: {\r\n                value: '',\r\n                error: false,\r\n                errorText: \"\"\r\n            }\r\n        }\r\n    )\r\n\r\n    useEffect(() => {\r\n        if (userData.email.value.length === 0) {\r\n            userData.email.error = true;\r\n            userData.email.errorText = \"required\";\r\n        }\r\n        else {\r\n            userData.email.error = false;\r\n            userData.email.errorText = \"\";\r\n        }\r\n    }, [userData.email]);\r\n\r\n    useEffect(() => {\r\n        if (userData.password.value.length === 0) {\r\n            userData.password.error = true;\r\n            userData.password.errorText = \"required\"\r\n        }\r\n        else {\r\n            userData.password.error = false;\r\n            userData.password.errorText = \"\";\r\n        }\r\n    }, [userData.password]);\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        if (!userData.email.error && !userData.password.error) {\r\n            setCurrentUserHandler(userData);\r\n        }\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { value, name } = event.target;\r\n        setUserData({ ...userData, [name]: { ...userData[name], value } });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h5\" component=\"div\">\r\n                I already have an account\r\n            </Typography>\r\n            <Typography variant=\"body2\" display=\"block\" >\r\n                Sign in with your email and password.\r\n            </Typography>\r\n            <FormControl fullWidth sx={{ mt: 1 }} variant=\"standard\">\r\n                <TextField\r\n                    name='email'\r\n                    type='email'\r\n                    onChange={handleChange}\r\n                    value={userData.email.value}\r\n                    label='email'\r\n                    error={userData.email.error}\r\n                    helperText={userData.email.errorText}\r\n                    required\r\n                    variant=\"standard\"\r\n                />\r\n            </FormControl>\r\n            <FormControl fullWidth sx={{ mt: 1 }} variant=\"standard\">\r\n                <TextField\r\n                    name='password'\r\n                    type='password'\r\n                    value={userData.password.value}\r\n                    error={userData.password.error}\r\n                    helperText={userData.password.errorText}\r\n                    onChange={handleChange}\r\n                    label='password'\r\n                    required\r\n                    variant=\"standard\"\r\n                />\r\n            </FormControl>\r\n\r\n            <Stack spacing={2} direction=\"row\" sx={{ pt: 5 }}>\r\n                <Button variant=\"contained\" onClick={handleSubmit}>SING IN</Button>\r\n            </Stack>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default React.memo(SignIn);","import React from 'react';\r\n\r\nimport SignUp from '../components/SignUp';\r\nimport SignIn from '../components/SignIn';\r\n\r\nimport { Grid, Container } from '@mui/material';\r\n\r\nconst SignInPage = () => {\r\n    return (\r\n        <>\r\n            <Container sx={{ mt: 10 }}>\r\n                <Grid container spacing={12}>\r\n                    <Grid item xs={12} lg={6}>\r\n                        <SignIn></SignIn>\r\n                    </Grid>\r\n                    <Grid item xs={12} lg={6}>\r\n                        <SignUp></SignUp>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(SignInPage);"],"names":["SignUp","dispatch","useDispatch","useState","email","value","error","errorText","name","repeatePassword","password","userData","setUserData","useEffect","length","handleChange","event","target","Typography","variant","component","display","FormControl","fullWidth","sx","mt","TextField","type","helperText","onChange","label","required","Stack","spacing","direction","pt","Button","onClick","user","preventDefault","setCurrentUser","React","SignIn","SignInPage","Container","Grid","container","item","xs","lg"],"sourceRoot":""}